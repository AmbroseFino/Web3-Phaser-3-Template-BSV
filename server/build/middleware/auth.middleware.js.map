{"version":3,"sources":["../../src/middleware/auth.middleware.js"],"names":["jwt","require","config","module","exports","req","res","next","token","session","accessToken","status","redirect","decoded","verify","get","user","ex","send"],"mappings":";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAExC;AACA,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,WAA1B,CAHwC,CAKxC;;AACA,MAAI,CAACF,KAAL,EACE,OAAOF,GAAG,CACPK,MADI,CACG,GADH,EAEJC,QAFI,CAEK,GAFL,CAAP;;AAIF,MAAI;AACF;AACA,QAAMC,OAAO,GAAGb,GAAG,CAACc,MAAJ,CAAWN,KAAX,EAAkBN,MAAM,CAACa,GAAP,CAAW,cAAX,CAAlB,CAAhB;AACAV,IAAAA,GAAG,CAACW,IAAJ,GAAWH,OAAX;AACAN,IAAAA,IAAI;AACL,GALD,CAKE,OAAOU,EAAP,EAAW;AACX;AACAX,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB,gBAArB;AACD;AACF,CApBD","sourcesContent":["const jwt = require(\"jsonwebtoken\");\nconst config = require(\"config\");\n\nmodule.exports = function(req, res, next) {\n\n  // get the token from the header if present\n  const token = req.session.accessToken\n\n  // if no token found, return access denied response \n  if (!token) \n    return res\n      .status(401)\n      .redirect(\"/\");\n\n  try {\n    //if can verify the token, set req.user and pass to next middleware\n    const decoded = jwt.verify(token, config.get(\"myprivatekey\"));\n    req.user = decoded;\n    next();\n  } catch (ex) {\n    //if invalid token\n    res.status(400).send(\"Invalid token.\");\n  }\n};"],"file":"auth.middleware.js"}