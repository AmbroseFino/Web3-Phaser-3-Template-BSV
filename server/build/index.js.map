{"version":3,"sources":["../src/index.js"],"names":["featuresRoutes","require","loginRoutes","cors","mongoose","config","http","express","app","bodyParser","path","passport","expressSession","secret","resave","saveUninitialized","use","initialize","session","urlencoded","extended","join","__dirname","get","req","res","sendFile","json","next","setHeader","connect","process","env","database","useNewUrlParser","then","console","log","err","error","port","PORT","createServer","listen","server","timeout"],"mappings":"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","sourcesContent":["const featuresRoutes = require(\"./routes/features.router.js\");\nconst loginRoutes = require(\"./routes/login.router.js\");\nconst cors = require('cors')\nconst mongoose = require(\"mongoose\")\nrequire('dotenv').config()\nconst http = require('http');\nconst express = require(\"express\")\nconst app = express()\nconst bodyParser = require('body-parser')\nconst path = require('path')\nconst passport = require('passport');\nconst expressSession = require('express-session')({\n  secret: 'secret',\n  resave: false,\n  saveUninitialized: false\n});\n// const rootDir = require('./util/path');\n\n(async () => {\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  app.use(cors())\n\n  app.use(bodyParser.urlencoded({ extended: true }));\n  \n  app.use(express.static(path.join(__dirname, '/../public')))\n\n  app.get('/', function (req, res) {\n    res.sendFile(path.join(__dirname, '/../index.html'));\n  });\n\n  app.get('/auth/game', function (req, res) {\n    res.sendFile(path.join(__dirname, '/../public/game.html'));\n  });\n\n  app.use(bodyParser.json());\n  app.use(expressSession);\n\n  app.use((req, res, next) => {\n      res.setHeader('Access-Control-Allow-Origin', '*');\n      res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE');\n      res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n      next();\n  })\n\n  \n  //connect to mongodb\n  mongoose\n    .connect(process.env.database, {useNewUrlParser: true})\n    .then(() => console.log(\"Connected to MongoDB...\"))\n    .catch(err => console.error(\"Could not connect to MongoDB...\"));\n\n\n  app.use(express.json());\n  //use users route for api/users\n  app.use(\"/\", featuresRoutes);\n  app.use(\"/\", loginRoutes);\n\n  const port = process.env.PORT || 3000;\n  const server = await http.createServer(app).listen(port);\n  server.timeout = 300000;\n})();"],"file":"index.js"}